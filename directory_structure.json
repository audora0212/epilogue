{
  "__files__": {
    "codes.py": "import os\nimport json\nimport argparse\nfrom typing import Dict, Optional, Set\n\n# 기본 포함 확장자\nINCLUDE_EXT: Set[str] = {\".tsx\"}\n\ndef build_tree(path: str, root: str, special_files: Set[str]) -> Optional[Dict]:\n    \"\"\"\n    주어진 경로를 재귀적으로 탐색해 .tsx 파일과 special_files 에 해당하는\n    파일만 포함한 트리(dict)를 반환한다.\n    .tsx / special 파일이 전혀 없는 디렉터리는 트리에서 완전히 제외된다.\n    \"\"\"\n    entries = sorted(os.listdir(path))\n    files: Dict[str, str] = {}\n    dirs: Dict[str, Dict] = {}\n\n    for entry in entries:\n        full_path = os.path.join(path, entry)\n\n        if os.path.isdir(full_path):\n            subtree = build_tree(full_path, root, special_files)\n            if subtree:                 # 하위에 포함할 파일이 있을 때만 추가\n                dirs[entry] = subtree\n        else:\n            rel_path = os.path.relpath(full_path, root)\n            ext = os.path.splitext(entry)[1].lower()\n\n            if ext in INCLUDE_EXT or rel_path in special_files:\n                try:\n                    with open(full_path, \"r\", encoding=\"utf-8\") as f:\n                        files[entry] = f.read()\n                except Exception as e:\n                    files[entry] = f\"Error reading file: {e}\"\n\n    # 포함할 파일과 디렉터리가 모두 없으면 None\n    if not files and not dirs:\n        return None\n\n    node: Dict = {}\n    if files:\n        node[\"__files__\"] = files\n    node.update(dirs)\n    return node\n\ndef save_json(data: Dict, output_file: str) -> None:\n    with open(output_file, \"w\", encoding=\"utf-8\") as f:\n        json.dump(data, f, ensure_ascii=False, indent=2)\n\ndef main(src: str, output: str) -> None:\n    if not os.path.isdir(src):\n        print(f\"에러: '{src}' 디렉터리가 존재하지 않습니다.\")\n        return\n\n    # 포함해야 하는 특수 파일 (루트 기준 상대 경로)\n    special_files: Set[str] = {\n        os.path.relpath(__file__, src),   # 현재 파이썬 스크립트\n        os.path.join(\"app\", \"globals.css\")\n    }\n\n    tree = build_tree(src, src, special_files)\n    if tree is None:\n        print(\"탐색된 .tsx / special 파일이 없습니다.\")\n        return\n\n    save_json(tree, output)\n    print(f\"디렉터리 구조가 '{output}'에 저장되었습니다.\")\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(\n        description=\".tsx 파일과 지정 파일을 포함한 Next.js 디렉터리 구조를 JSON으로 저장\"\n    )\n    parser.add_argument(\"--src\", default=\"./\", help=\"탐색할 루트 디렉터리 (기본: ./)\")\n    parser.add_argument(\"--output\", default=\"directory_structure.json\", help=\"출력 JSON 파일명\")\n\n    args = parser.parse_args()\n    main(args.src, args.output)\n"
  },
  "app": {
    "__files__": {
      "globals.css": "@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n@custom-variant dark (&:is(.dark *));\n\n:root {\n  --background: oklch(1 0 0);\n  --foreground: oklch(0.145 0 0);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0.145 0 0);\n  --popover: oklch(1 0 0);\n  --popover-foreground: oklch(0.145 0 0);\n  --primary: oklch(0.205 0 0);\n  --primary-foreground: oklch(0.985 0 0);\n  --secondary: oklch(0.97 0 0);\n  --secondary-foreground: oklch(0.205 0 0);\n  --muted: oklch(0.97 0 0);\n  --muted-foreground: oklch(0.556 0 0);\n  --accent: oklch(0.97 0 0);\n  --accent-foreground: oklch(0.205 0 0);\n  --destructive: oklch(0.577 0.245 27.325);\n  --destructive-foreground: oklch(0.577 0.245 27.325);\n  --border: oklch(0.922 0 0);\n  --input: oklch(0.922 0 0);\n  --ring: oklch(0.708 0 0);\n  --chart-1: oklch(0.646 0.222 41.116);\n  --chart-2: oklch(0.6 0.118 184.704);\n  --chart-3: oklch(0.398 0.07 227.392);\n  --chart-4: oklch(0.828 0.189 84.429);\n  --chart-5: oklch(0.769 0.188 70.08);\n  --radius: 0.625rem;\n  --sidebar: oklch(0.985 0 0);\n  --sidebar-foreground: oklch(0.145 0 0);\n  --sidebar-primary: oklch(0.205 0 0);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.97 0 0);\n  --sidebar-accent-foreground: oklch(0.205 0 0);\n  --sidebar-border: oklch(0.922 0 0);\n  --sidebar-ring: oklch(0.708 0 0);\n}\n\n.dark {\n  --background: oklch(0.145 0 0);\n  --foreground: oklch(0.985 0 0);\n  --card: oklch(0.145 0 0);\n  --card-foreground: oklch(0.985 0 0);\n  --popover: oklch(0.145 0 0);\n  --popover-foreground: oklch(0.985 0 0);\n  --primary: oklch(0.985 0 0);\n  --primary-foreground: oklch(0.205 0 0);\n  --secondary: oklch(0.269 0 0);\n  --secondary-foreground: oklch(0.985 0 0);\n  --muted: oklch(0.269 0 0);\n  --muted-foreground: oklch(0.708 0 0);\n  --accent: oklch(0.269 0 0);\n  --accent-foreground: oklch(0.985 0 0);\n  --destructive: oklch(0.396 0.141 25.723);\n  --destructive-foreground: oklch(0.637 0.237 25.331);\n  --border: oklch(0.269 0 0);\n  --input: oklch(0.269 0 0);\n  --ring: oklch(0.439 0 0);\n  --chart-1: oklch(0.488 0.243 264.376);\n  --chart-2: oklch(0.696 0.17 162.48);\n  --chart-3: oklch(0.769 0.188 70.08);\n  --chart-4: oklch(0.627 0.265 303.9);\n  --chart-5: oklch(0.645 0.246 16.439);\n  --sidebar: oklch(0.205 0 0);\n  --sidebar-foreground: oklch(0.985 0 0);\n  --sidebar-primary: oklch(0.488 0.243 264.376);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.269 0 0);\n  --sidebar-accent-foreground: oklch(0.985 0 0);\n  --sidebar-border: oklch(0.269 0 0);\n  --sidebar-ring: oklch(0.439 0 0);\n}\n\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --color-card: var(--card);\n  --color-card-foreground: var(--card-foreground);\n  --color-popover: var(--popover);\n  --color-popover-foreground: var(--popover-foreground);\n  --color-primary: var(--primary);\n  --color-primary-foreground: var(--primary-foreground);\n  --color-secondary: var(--secondary);\n  --color-secondary-foreground: var(--secondary-foreground);\n  --color-muted: var(--muted);\n  --color-muted-foreground: var(--muted-foreground);\n  --color-accent: var(--accent);\n  --color-accent-foreground: var(--accent-foreground);\n  --color-destructive: var(--destructive);\n  --color-destructive-foreground: var(--destructive-foreground);\n  --color-border: var(--border);\n  --color-input: var(--input);\n  --color-ring: var(--ring);\n  --color-chart-1: var(--chart-1);\n  --color-chart-2: var(--chart-2);\n  --color-chart-3: var(--chart-3);\n  --color-chart-4: var(--chart-4);\n  --color-chart-5: var(--chart-5);\n  --radius-sm: calc(var(--radius) - 4px);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-lg: var(--radius);\n  --radius-xl: calc(var(--radius) + 4px);\n  --color-sidebar: var(--sidebar);\n  --color-sidebar-foreground: var(--sidebar-foreground);\n  --color-sidebar-primary: var(--sidebar-primary);\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n  --color-sidebar-accent: var(--sidebar-accent);\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n  --color-sidebar-border: var(--sidebar-border);\n  --color-sidebar-ring: var(--sidebar-ring);\n}\n\n@layer base {\n  * {\n    @apply border-border outline-ring/50;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n\n/* iOS Safe Area 지원 */\n.safe-area-wrapper {\n  padding-top: env(safe-area-inset-top);\n  padding-bottom: env(safe-area-inset-bottom);\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  min-height: 100vh;\n  min-height: 100dvh; /* 동적 뷰포트 높이 지원 */\n}\n\n/* iOS 사파리 스크롤 바운스 방지 */\nbody {\n  overscroll-behavior: none;\n  -webkit-overflow-scrolling: touch;\n}\n\n/* iOS 사파리 줌 방지 */\ninput,\ntextarea,\nselect {\n  font-size: 16px !important;\n}\n\n/* iOS 사파리 터치 하이라이트 제거 */\n* {\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* iOS 사파리 버튼 스타일 초기화 */\nbutton {\n  -webkit-appearance: none;\n  appearance: none;\n}\n\n\n@font-face {\n  font-family: 'MaruBuri';\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot);\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot?#iefix) format(\"embedded-opentype\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff2) format(\"woff2\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff) format(\"woff\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.ttf) format(\"truetype\");\n  font-weight: 400;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'MaruBuriSemiBold';\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.eot);\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.eot?#iefix) format(\"embedded-opentype\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.woff2) format(\"woff2\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.woff) format(\"woff\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.ttf) format(\"truetype\");\n  font-weight: 600;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'MaruBuriBold';\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.eot);\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.eot?#iefix) format(\"embedded-opentype\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.woff2) format(\"woff2\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.woff) format(\"woff\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.ttf) format(\"truetype\");\n  font-weight: 700;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'MaruBuriLight';\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.eot);\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.eot?#iefix) format(\"embedded-opentype\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.woff2) format(\"woff2\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.woff) format(\"woff\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.ttf) format(\"truetype\");\n  font-weight: 300;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'MaruBuriExtraLight';\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.eot);\n  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.eot?#iefix) format(\"embedded-opentype\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.woff2) format(\"woff2\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.woff) format(\"woff\"),\n       url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.ttf) format(\"truetype\");\n  font-weight: 200;\n  font-style: normal;\n}\n\n/* --- Pretendard @font-face 선언 --- */\n@font-face {\n  font-family: 'Pretendard-Regular';\n  src: url('https://fastly.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\n  font-weight: 400;\n  font-style: normal;\n}\n\n/* --- Pretendard용 유틸리티 클래스 --- */\n.font-pretendard {\n  font-family: 'Pretendard-Regular', sans-serif !important;\n}\n\n/* 2) Tailwind 기본 import */\n@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n/* 3) 모든 요소에 MaruBuri 적용 */\nhtml, body, * {\n  font-family: 'MaruBuri', sans-serif !important;\n}",
      "layout.tsx": "// app/layout.tsx\n\nimport type React from 'react'\nimport type { Metadata, Viewport } from 'next'\nimport './globals.css'\n\nexport const metadata: Metadata = {\n  title: '에필로그 방명록',\n  description: '진심에 대한 방명록 페이지입니다',\n  // viewport removed from here\n}\n\n// 새로 추가: App Router 전용 viewport 설정\nexport const viewport: Viewport = {\n  width: 'device-width',\n  initialScale: 1,\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"ko\">\n      <head>\n        {/* PWA 메타 태그 */}\n        <meta name=\"theme-color\" content=\"#fef7ed\" />\n        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\n\n        {/* PWA 매니페스트 및 아이콘 */}\n        <link rel=\"manifest\" href=\"/manifest.json\" />\n        <link rel=\"apple-touch-icon\" href=\"/icon-192.png\" />\n      </head>\n      <body>\n        <div className=\"safe-area-wrapper\">{children}</div>\n      </body>\n    </html>\n  )\n}\n",
      "page.tsx": "import Guestbook from \"../components/guestbook\"\n\nexport default function Page() {\n  return (\n    <div>\n      <Guestbook />\n    </div>\n  )\n}\n"
    }
  },
  "components": {
    "__files__": {
      "BottomBar.tsx": "// components/BottomBar.tsx\n\"use client\"\n\nimport { ReactNode } from \"react\"\n\nexport default function BottomBar({ children }: { children: ReactNode }) {\n  return (\n    <div className=\"absolute inset-x-0 bottom-4 px-4 pb-safe pointer-events-auto flex flex-col items-center\">\n      {children}\n    </div>\n  )\n}\n",
      "guestbook.tsx": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport WriteMessageForm from \"./write-message-form\"\nimport BottomBar from \"./BottomBar\"\n\nconst mockEntries = [\n  { id: 1, nickname: \"닉네임\", message: \"항상 밝고 따뜻한 사람이셨어요. 편히 쉬세요\", date: \"2025년 11월 9일\" },\n  { id: 2, nickname: \"닉네임\", message: \"항상 밝고 따뜻한 사람이셨어요. 편히 쉬세요\", date: \"2025년 11월 5일\" },\n  { id: 3, nickname: \"닉네임\", message: \"어렸을때 같이 노드에서 뛰놀던 기억이 아직도 나는데, 이제 함께 만져 가게 되었구나. 난 조금만 있다가 갈 테니 먼저 갈 지니고 있어줘\", date: \"2025년 11월 6일\" },\n  { id: 4, nickname: \"닉네임\", message: \"항상 밝고 따뜻한 사람이셨어요. 편히 쉬세요\", date: \"2025년 11월 6일\" },\n  { id: 5, nickname: \"닉네임\", message: \"항상 밝고 따뜻한 사람이셨어요. 편히 쉬세요항상 밝고 따뜻한 사람이셨어요. 편히 쉬세요\", date: \"2025년 11월 6일\" },\n  { id: 6, nickname: \"닉네임\", message: \"진심에 대한 방명록을 자유롭게 남겨보세요! (가상의 고인) 故윤영주에게 추모사를 남겨주세요\", date: \"2025년 11월 6일\" },\n  { id: 7, nickname: \"닉네임\", message: \"좋은 추억만 간직하고 있을게요\", date: \"2025년 11월 7일\" },\n  { id: 8, nickname: \"닉네임\", message: \"하늘에서 편히 쉬세요\", date: \"2025년 11월 8일\" },\n  { id: 9, nickname: \"닉네임\", message: \"항상 기억하겠습니다\", date: \"2025년 11월 9일\" },\n  { id: 10, nickname: \"닉네임\", message: \"감사했습니다\", date: \"2025년 11월 10일\" },\n]\n\nexport default function Guestbook() {\n  const [showWriteForm, setShowWriteForm] = useState(false)\n\n  useEffect(() => {\n    if (!showWriteForm) window.scrollTo(0, 0)\n  }, [showWriteForm])\n\n  if (showWriteForm) {\n    return <WriteMessageForm onBack={() => setShowWriteForm(false)} />\n  }\n\n  return (\n    <div\n      className=\"relative h-[87vh] overflow-hidden\"\n      style={{\n        backgroundImage: \"url('/background.png')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <img\n        src=\"/logo.png\"\n        alt=\"Logo\"\n        className=\"absolute top-safe left-4 w-18 h-14 object-contain z-10\"\n      />\n\n      <div className=\"max-w-md mx-auto w-full h-full flex flex-col overflow-hidden px-4 mb-20\">\n        <div className=\"text-center flex-shrink-0 mt-[30px]\">\n          <h1 className=\"text-lg font-bold text-gray-800 mb-1 mt-10\">\n            에필로그 팀/故윤영주께\n          </h1>\n          <h1 className=\"text-lg font-bold text-gray-800 mb-2\">\n            작별을 보내주세요\n          </h1>\n          <p className=\"text-xs text-gray-500 font-pretendard\">\n            진심에 대한 방명록 페이지입니다\n          </p>\n        </div>\n\n        <div className=\"flex items-center justify-center p-2 flex-shrink-0 mt-4 mb-2\">\n          <span className=\"text-10 text-gray-70 font-pretendard\">\n            <span className=\"font-bold\">{mockEntries.length}개</span>의 작별이 모였어요\n          </span>\n        </div>\n\n        <div className=\"relative flex-1 overflow-hidden\">\n          <div\n            className=\"relative w-full h-full overflow-hidden\"\n            style={{\n              WebkitMaskImage: 'linear-gradient(to top, transparent, black 30%)',\n              WebkitMaskRepeat: \"no-repeat\",\n              WebkitMaskPosition: \"bottom\",\n              maskImage: 'linear-gradient(to top, transparent, black 30%)',\n              maskRepeat: \"no-repeat\",\n              maskPosition: \"bottom\",\n            }}\n          >\n            <div className=\"flex gap-[0.6rem]\">\n              <div className=\"flex flex-col gap-[0.6rem] w-1/2\">\n                {mockEntries\n                  .filter((_, i) => i % 2 === 0)\n                  .map((entry) => (\n                    <Card\n                      key={entry.id}\n                      className=\"bg-white/40 border-0 shadow-sm\"\n                    >\n                      <CardContent className=\"py-0 px-4\">\n                        <div className=\"text-xs font-medium text-gray-600 mb-1 font-pretendard\">\n                          {entry.nickname}\n                        </div>\n                        <div className=\"text-xs text-gray-700 leading-relaxed mb-1\">\n                          {entry.message}\n                        </div>\n                        <div className=\"text-xs text-gray-400 font-pretendard\">\n                          {entry.date}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n              </div>\n              <div className=\"flex flex-col gap-[0.6rem] w-1/2\">\n                {mockEntries\n                  .filter((_, i) => i % 2 === 1)\n                  .map((entry) => (\n                    <Card\n                      key={entry.id}\n                      className=\"bg-white/40 border-0 shadow-sm\"\n                    >\n                      <CardContent className=\"py-0 px-4\">\n                        <div className=\"text-xs font-medium text-gray-600 mb-1 font-pretendard\">\n                          {entry.nickname}\n                        </div>\n                        <div className=\"text-xs text-gray-700 leading-relaxed mb-1\">\n                          {entry.message}\n                        </div>\n                        <div className=\"text-xs text-gray-400 font-pretendard\">\n                          {entry.date}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n              </div>\n            </div>\n          </div>\n\n          <BottomBar>\n            <div className=\"bg-gray-800 text-white text-xs p-3 rounded-lg text-center font-pretendard\">\n              진심에 대한 방명록을 자유롭게 남겨보세요!\n              <br />\n              (가상의 고인) 故윤영주에게 추모사를 남겨주세요\n            </div>\n            <div className=\"mt-2 w-full\">\n              <Button\n                className=\"w-full bg-[#396F4B] text-white py-3 rounded-full font-medium font-pretendard disabled:bg-opacity-30\"\n                onClick={() => setShowWriteForm(true)}\n              >\n                작별 남기기\n              </Button>\n            </div>\n          </BottomBar>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "success-screen.tsx": "\"use client\"\n\nimport { useEffect } from \"react\"\nimport BottomBar from \"./BottomBar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\n\ninterface SuccessScreenProps {\n  onGoHome: () => void\n  submittedMessage: { nickname: string; message: string; date: string }\n  totalCount: number\n}\n\nexport default function SuccessScreen({\n  onGoHome,\n  submittedMessage,\n  totalCount,\n}: SuccessScreenProps) {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <div\n      className=\"relative h-[87vh] flex flex-col items-center justify-center\"\n      style={{\n        backgroundImage: \"url('/background.png')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <div className=\"max-w-md mx-auto px-4\">\n        {/* Header */}\n        <div className=\"text-center pt-safe pt-8 mb-12\">\n          <div className=\"text-sm text-gray-600 mb-4\">\n            에필로그 팀/(가상의 고인) 故윤영주께 보내는\n          </div>\n          <h1 className=\"text-xl font-bold text-gray-800\">\n            {totalCount}번째 작별이 남겨졌어요\n          </h1>\n        </div>\n\n        <div className=\"flex justify-center mb-32\">\n          <Card\n            className=\"shadow-sm max-w-xs w-full border-none\"\n            style={{\n              transform: \"skewX(-2deg) rotate(3deg)\",\n              backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n            }}\n          >\n            <CardContent className=\"overflow-hidden p-0\">\n              <div style={{ transform: \"skewX(-2deg) rotate(deg)\", padding: \"0.5rem 1rem 1rem\" }}>\n                <div className=\"text-sm font-normal text-gray-600 mb-2 font-pretendard whitespace-normal break-all\">\n                  {submittedMessage.nickname}\n                </div>\n                <div className=\"text-sm font-bold text-gray-700 leading-relaxed mb-3 whitespace-normal break-all\">\n                  {submittedMessage.message}\n                </div>\n                <div className=\"text-xs text-gray-400 text-right font-pretendard whitespace-normal break-all\">\n                  {submittedMessage.date}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      <BottomBar>\n        <Button\n          onClick={onGoHome}\n          className=\"w-full bg-[#396F4B] text-white py-3 rounded-full font-medium mb-safe font-pretendard disabled:bg-opacity-30\"\n        >\n          처음으로 돌아가기\n        </Button>\n      </BottomBar>\n    </div>\n  )\n}\n",
      "write-message-form.tsx": "\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { ArrowLeft } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Input } from \"@/components/ui/input\"\nimport SuccessScreen from \"./success-screen\"\nimport BottomBar from \"./BottomBar\"\n\ninterface WriteMessageFormProps {\n  onBack: () => void\n}\n\nexport default function WriteMessageForm({ onBack }: WriteMessageFormProps) {\n  const [message, setMessage] = useState(\"\")\n  const [senderName, setSenderName] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [showSuccess, setShowSuccess] = useState(false)\n  const [submittedData, setSubmittedData] = useState<{\n    nickname: string\n    message: string\n    date: string\n  } | null>(null)\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  if (showSuccess && submittedData) {\n    return <SuccessScreen onGoHome={onBack} submittedMessage={submittedData} totalCount={83} />\n  }\n\n  const handleSubmit = async () => {\n    if (!message.trim() || !senderName.trim()) {\n      alert(\"메시지와 이름을 모두 입력해주세요.\")\n      return\n    }\n\n    setIsSubmitting(true)\n    await new Promise((r) => setTimeout(r, 1000))\n\n    const currentDate = new Date().toLocaleDateString(\"ko-KR\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    })\n\n    setSubmittedData({ nickname: senderName, message, date: currentDate })\n    setIsSubmitting(false)\n    setShowSuccess(true)\n  }\n\n  return (\n    <div className=\"relative h-[87vh] bg-white overflow-auto\">\n      {/* 수정된 헤더 */}\n      <div className=\"flex items-center justify-center p-4 pb-2 pt-safe relative\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onBack}\n          className=\"absolute left-4 h-8 w-8 p-0\"\n        >\n          <ArrowLeft className=\"h-5 w-5\" />\n        </Button>\n        <h1 className=\"text-lg font-bold text-gray-800 font-pretendard\">\n          작별 남기기\n        </h1>\n      </div>\n\n      <div className=\"max-w-md mx-auto\">\n        <div className=\"p-4 space-y-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 font-maruburi\">\n              To, 에필로그 팀/윤영주\n            </h2>\n            <div className=\"p-4 mb-4 bg-[#F4F5F4] rounded-lg text-left\">\n              <p className=\"text-sm font-pretendard mb-2 text-[#7E8D87]\">\n                에필로그가 탄생하기까지...\n              </p>\n              <p className=\"text-sm font-pretendard text-gray-700\">\n                \"에필로그 팀은 에필로그 서비스 시스템을 디자인하기 위해 약 30차례의\n                회의를 거쳤어요\"\n              </p>\n            </div>\n          </div>\n\n          <div className=\"relative\">\n            <Textarea\n              placeholder={`진심에 대한 방명록을 자유롭게 남겨보세요!\\n(가상의 고인) 故윤영주에게 추모사를 남겨주세요`}\n              value={message}\n              onChange={(e) => setMessage(e.target.value.slice(0, 150))}\n              className=\"min-h-[200px] bg-white border-gray-200 text-base placeholder:text-sm placeholder:font-pretendard whitespace-pre-line resize-none font-pretendard\"\n            />\n            <div className=\"absolute bottom-3 right-3 text-[70%] text-gray-400 font-pretendard\">\n              {message.length}/150\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"text-xl font-bold text-gray-800 mb-4 text-right w-full font-maruburi\">\n              From,\n            </h3>\n            <div className=\"relative\">\n              <Input\n                placeholder=\"남기는 이의 이름, 별명을 적어주세요\"\n                value={senderName}\n                onChange={(e) => setSenderName(e.target.value.slice(0, 16))}\n                className=\"bg-white border-gray-200 text-base placeholder:text-xs placeholder:font-pretendard font-pretendard\"\n              />\n              <div className=\"absolute bottom-3 right-3 text-[70%] text-gray-400 font-pretendard\">\n                {senderName.length}/16\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <BottomBar>\n        <Button\n          onClick={handleSubmit}\n          disabled={isSubmitting || !message.trim() || !senderName.trim()}\n          className=\"w-full bg-[#396F4B] bottom-20 text-white py-3 rounded-full font-medium font-pretendard disabled:bg-opacity-30\"\n        >\n          {isSubmitting ? \"등록 중...\" : \"작별 남기기\"}\n        </Button>\n      </BottomBar>\n    </div>\n  )\n}\n"
    },
    "ui": {
      "__files__": {
        "button.tsx": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n",
        "card.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
        "input.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n",
        "textarea.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"
      }
    }
  }
}